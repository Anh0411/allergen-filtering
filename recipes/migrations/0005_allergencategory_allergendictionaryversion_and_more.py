# Generated by Django 5.2.1 on 2025-06-21 11:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('recipes', '0004_alter_recipe_image_url'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllergenCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_major_allergen', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AllergenDictionaryVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('total_categories', models.IntegerField()),
                ('total_terms', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='verification_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='recipe',
            name='last_analyzed',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='nlp_analysis_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='recipe',
            name='nlp_confidence_score',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='recipe',
            name='risk_level',
            field=models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=20),
        ),
        migrations.AddField(
            model_name='recipe',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='recipeingredientitem',
            name='confidence_score',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AddField(
            model_name='recipeingredientitem',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='recipeingredientitem',
            name='verification_notes',
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name='AllergenAnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], max_length=20)),
                ('confidence_scores', models.JSONField(default=dict)),
                ('detected_allergens', models.JSONField(default=dict)),
                ('recommendations', models.JSONField(default=list)),
                ('total_ingredients', models.IntegerField(default=0)),
                ('analyzed_ingredients', models.IntegerField(default=0)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('recipe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_result', to='recipes.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='allergen',
            name='allergen_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='legacy_allergens', to='recipes.allergencategory'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='allergen_categories',
            field=models.ManyToManyField(blank=True, related_name='ingredients', to='recipes.allergencategory'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='allergen_categories',
            field=models.ManyToManyField(blank=True, related_name='recipes', to='recipes.allergencategory'),
        ),
        migrations.AddField(
            model_name='recipeingredientitem',
            name='detected_allergens',
            field=models.ManyToManyField(blank=True, related_name='ingredient_detections', to='recipes.allergencategory'),
        ),
        migrations.CreateModel(
            name='AllergenDetectionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detected_term', models.CharField(max_length=200)),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('match_type', models.CharField(choices=[('exact_match', 'Exact Match'), ('fuzzy_match', 'Fuzzy Match'), ('contextual_match', 'Contextual Match'), ('scientific_name', 'Scientific Name'), ('hidden_source', 'Hidden Source'), ('main_ingredient', 'Main Ingredient'), ('synonym', 'Synonym')], max_length=50)),
                ('context', models.TextField(blank=True)),
                ('position_start', models.IntegerField()),
                ('position_end', models.IntegerField()),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('verified_by', models.CharField(blank=True, max_length=100)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('allergen_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detection_logs', to='recipes.allergencategory')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detection_logs', to='recipes.recipe')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AllergenSynonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=200)),
                ('term_type', models.CharField(choices=[('main_ingredient', 'Main Ingredient'), ('synonym', 'Synonym'), ('scientific_name', 'Scientific Name'), ('hidden_source', 'Hidden Source')], max_length=50)),
                ('confidence_score', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('allergen_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='synonyms', to='recipes.allergencategory')),
            ],
            options={
                'ordering': ['allergen_category', 'term_type', 'term'],
                'unique_together': {('allergen_category', 'term')},
            },
        ),
    ]
